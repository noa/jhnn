CMAKE_MINIMUM_REQUIRED(VERSION 3.2 FATAL_ERROR)
CMAKE_POLICY(VERSION 3.2)

FIND_PACKAGE(Torch REQUIRED)

# JHNN
ADD_SUBDIRECTORY(lib)

FILE(STRINGS lib/JHNN/generic/JHNN.h JHNN_headers NEWLINE_CONSUME)
FILE(WRITE JHNN_h.lua "return [[")
FILE(APPEND JHNN_h.lua ${JHNN_headers})
FILE(APPEND JHNN_h.lua "]]")

FILE(GLOB luasrc)

SET(luasrc
  init.lua
  Linear.lua
  LookupTable.lua
  )

ADD_TORCH_PACKAGE(jhu "" "${luasrc}")

INCLUDE_DIRECTORIES("${Torch_INSTALL_INCLUDE}/TH")
LINK_DIRECTORIES("${Torch_INSTALL_LIB}")

MESSAGE("Torch install include: ${Torch_INSTALL_INCLUDE}")
MESSAGE("Torch install lib: ${Torch_INSTALL_LIB}")

# LIBJHU
SET(src src/init.cpp)
ADD_LIBRARY(jhu MODULE ${src})
TARGET_COMPILE_FEATURES(jhu PRIVATE cxx_static_assert)
TARGET_LINK_LIBRARIES(jhu luaT TH)
IF(APPLE)
  SET_TARGET_PROPERTIES(jhu PROPERTIES
    LINK_FLAGS "-undefined dynamic_lookup")
ENDIF()
SET_TARGET_PROPERTIES(jhu PROPERTIES
  PREFIX "lib"
  IMPORT_PREFIX "lib")

INSTALL(TARGETS jhu
  RUNTIME DESTINATION "${Torch_INSTALL_LUA_CPATH_SUBDIR}"
  LIBRARY DESTINATION "${Torch_INSTALL_LUA_CPATH_SUBDIR}")

# LIBCUJHU
FIND_PACKAGE(CUDA 7.0 REQUIRED)
MESSAGE("CUDA_TOOLKIT_ROOT_DIR: ${CUDA_TOOLKIT_ROOT_DIR}")

IF(CUDA_TOOLKIT_ROOT_DIR)
  MESSAGE("Building CUDA library (cujhu)")
  INCLUDE_DIRECTORIES("${Torch_INSTALL_INCLUDE}/THC")
  #LIST(APPEND CUDA_NVCC_FLAGS "-arch=sm_35;-std=c++11;-O2;-DVERBOSE")
  SET(cudasrc src/init.cu)

  CUDA_ADD_LIBRARY(cujhu MODULE ${cudasrc})
  TARGET_LINK_LIBRARIES(cujhu luaT THC TH)
  IF(APPLE)
    SET_TARGET_PROPERTIES(cujhu PROPERTIES
      LINK_FLAGS "-undefined dynamic_lookup")
  ENDIF()
  SET_TARGET_PROPERTIES(cujhu PROPERTIES
    PREFIX "lib"
    IMPORT_PREFIX "lib")

  INSTALL(TARGETS cujhu
    RUNTIME DESTINATION "${Torch_INSTALL_LUA_CPATH_SUBDIR}"
    LIBRARY DESTINATION "${Torch_INSTALL_LUA_CPATH_SUBDIR}")
ENDIF()
